{"version":3,"sources":["Redux/auth-reducer.js","Components/Header/Header.jsx","Shared/Validators.js","Components/Common/FormsControl.jsx","Components/SignIn/SignIn.jsx","Components/SignUp/SignUp.jsx","Pages/Home/Home.jsx","Pages/Shop/Shop.jsx","Redux/store.js","App.js","reportWebVitals.js","firebaseConfig.js","index.js"],"names":["SET_USER_DATA","initialState","uid","name","email","photoUrl","emailVerified","isAuth","setAuthUserData","type","payload","signOut","dispatch","firebase","auth","then","console","log","catch","error","authReducer","state","action","connect","getAuthUserData","onAuthStateChanged","user","displayName","photoURL","props","useEffect","Navbar","bg","variant","fixed","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","to","onClick","required","value","undefined","emailError","test","Input","input","meta","isError","touched","SignInFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","htmlFor","href","signIn","password","signInWithEmailAndPassword","userCredential","stopSubmit","_error","message","code","formData","SignUpFormRedux","signUp","createUserWithEmailAndPassword","Home","Shop","reducers","combineReducers","formReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","window","App","nextProps","nextState","exact","path","render","SignUp","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","rrfProps","config","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aa091f3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    uid: null,\r\n    name: null,\r\n    email: null,\r\n    photoUrl: null,\r\n    emailVerified: null,\r\n    isAuth: false,\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (uid, name, email, photoUrl, emailVerified, isAuth) => ({\r\n    type: SET_USER_DATA, payload: { uid, name, email, photoUrl, emailVerified, isAuth }\r\n})\r\n\r\nexport const signIn = (email, password) => (dispatch) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(userCredential => {\r\n            dispatch(setAuthUserData(\r\n                userCredential.user.uid,\r\n                userCredential.user.displayName,\r\n                userCredential.user.email,\r\n                userCredential.user.photoURL,\r\n                userCredential.user.emailVerified,\r\n                true))\r\n            console.log('signInSuccess =>', userCredential.user)\r\n        })\r\n        .catch(error => {\r\n            dispatch(stopSubmit(\"signIn\", { _error: error.message }))\r\n            console.log('signInError =>', error.code)\r\n        })\r\n}\r\n\r\nexport const signUp = (email, password) => (dispatch) => {\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(userCredential => {\r\n            dispatch(setAuthUserData(\r\n                userCredential.user.uid,\r\n                userCredential.user.displayName,\r\n                userCredential.user.email,\r\n                userCredential.user.photoURL,\r\n                userCredential.user.emailVerified,\r\n                true))\r\n            console.log('signUpSuccess =>', userCredential.user)\r\n        })\r\n        .catch(error => {\r\n            dispatch(stopSubmit(\"signUp\", { _error: error.message }))\r\n            console.log('signUpError =>', error.code)\r\n        })\r\n}\r\n\r\nexport const signOut = () => (dispatch) => {\r\n    firebase.auth().signOut()\r\n        .then(() => {\r\n            console.log('then signOutSuccess =>');\r\n            dispatch(setAuthUserData(null, null, null, null, null, false))\r\n        })\r\n        .catch(error => {\r\n            console.log('catch signOutError =>', error)\r\n        })\r\n};\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n            console.log('User is signed in', user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true);\r\n            dispatch(setAuthUserData(user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true))\r\n        } else {\r\n            console.log('No user is signed in')\r\n        }\r\n    })\r\n}\r\n\r\nexport const getUser = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n            console.log('User is signed in', user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true);\r\n            setAuthUserData(user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true)\r\n\r\n        } else {\r\n            // dispatch(setAuthUserData(null, null, null, null, null, false))\r\n            console.log(' No user is signed in')\r\n        }\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const getUser1 = () => (dispatch) => {\r\n    const user = firebase.auth().currentUser\r\n\r\n    console.log('User is signed in', user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true);\r\n\r\n    dispatch(setAuthUserData(user.uid, user.displayName, user.email, user.photoURL, user.emailVerified, true))\r\n\r\n\r\n    // dispatch(setAuthUserData(null, null, null, null, null, false))\r\n    console.log(' No user is signed in')\r\n\r\n}\r\n\r\n\r\nexport default authReducer","import React, { useEffect, useState } from 'react';\r\nimport { Navbar, Nav, } from 'react-bootstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getAuthUserData, setAuthUserData, signOut } from '../../Redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = (props) => {\r\n  useEffect(() => props.getAuthUserData())\r\n  const signOut = () => props.signOut()\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"sm\">\r\n      <Navbar.Brand >My APP</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavLink className=\"nav-link\" to={\"/home\"}>Home</NavLink>\r\n          <NavLink className=\"nav-link\" to={\"/shop\"}>Shop</NavLink>\r\n          <NavLink className=\"nav-link\" to={\"/admin\"}>Admin</NavLink>\r\n        </Nav>\r\n        <Nav>\r\n\r\n          <p>{props.email}</p>\r\n          {props.uid\r\n            ? <NavLink className=\"nav-link\" to=\"/\" onClick={signOut}>Sign Out</NavLink>\r\n            : <>\r\n              <NavLink className=\"nav-link\" to={\"/sign-in\"}>Sign in</NavLink>\r\n              <NavLink className=\"nav-link\" to={\"/sign-up\"}>Sign up</NavLink>\r\n            </>\r\n          }\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  uid: state.firebase.auth.uid,\r\n  email: state.firebase.auth.email\r\n\r\n})\r\nconst mapDistpatchToProps1 = (dispatch) => {\r\n  return {\r\n    setAuthUserData: () => dispatch(setAuthUserData()),\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signOut, getAuthUserData })(Header) \r\n","const required1 = values => {\r\n    debugger\r\n    if (values) return undefined\r\n    return 'Field is required'\r\n    // const errors = {}\r\n    // if (!values.email) {\r\n    //     errors.email = 'Required'\r\n    // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    //     errors.email = 'Invalid email address'\r\n    // }\r\n    // return errors\r\n}\r\n\r\nexport const required = value => value ? undefined : 'Field is required'\r\nexport const emailError = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address' : undefined","\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const isError = meta.touched && meta.error\r\n    return (\r\n        <>\r\n            <input {...input} {...props} />\r\n            {isError && <span>{meta.error}</span>}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport '../../App.css';\r\nimport { signIn } from \"../../Redux/auth-reducer\";\r\nimport { emailError, required } from \"../../Shared/Validators\";\r\nimport { Input } from \"../Common/FormsControl\";\r\n\r\nconst SignInForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <h3>Sign in</h3>\r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <Field className=\"form-control\"\r\n                    name={'email'}\r\n                    placeholder={'Enter email'}\r\n                    type={\"email\"}\r\n                    component={Input}\r\n                    validate={[required, emailError]} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <Field className=\"form-control\"\r\n                    name={'password'}\r\n                    placeholder={'Enter password'}\r\n                    type={\"password\"}\r\n                    component={Input} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <div className=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                </div>\r\n            </div>\r\n            {props.error && <div className=\"form-group\">{props.error}</div>}\r\n\r\n            <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\r\n                Sign in\r\n            </button>\r\n            <p className=\"forgot-password text-right\">\r\n                Unregistered\r\n                <NavLink to={\"/sign-up\"}> Sign up ?</NavLink>\r\n            </p>\r\n\r\n\r\n            <p className=\"forgot-password text-right\">\r\n                Forgot <a href=\"#\">password?</a>\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst SignInFormRedux = reduxForm({ form: 'signIn' })(SignInForm)\r\n\r\nconst SignIn = (props) => {\r\n    console.log(props)\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.signIn(formData.email, formData.password)\r\n    }\r\n    // if (props.isAuth) {\r\n    //     return <Redirect to={\"/profile\"} />\r\n    // }\r\n    return <SignInFormRedux onSubmit={onSubmit} />\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    uid: state.firebase.auth.uid,\r\n\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { signIn })(SignIn)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { signUp } from \"../../Redux/auth-reducer\";\r\nimport { emailError, required } from \"../../Shared/Validators\";\r\nimport { Input } from \"../Common/FormsControl\";\r\n\r\nconst SignUpForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <h3>Register</h3>\r\n            <div className=\"form-group\">\r\n                <label>First name</label>\r\n                <Field className=\"form-control\"\r\n                    name={'firstName'}\r\n                    placeholder={'First name'}\r\n                    component='input'\r\n                    type={\"text\"} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Last name</label>\r\n                <Field className=\"form-control\"\r\n                    name={'lastName'}\r\n                    placeholder={'Last name'}\r\n                    component='input'\r\n                    type={\"text\"} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <Field className=\"form-control\"\r\n                    name={'email'}\r\n                    placeholder={'Enter email'}\r\n                    type={\"email\"}\r\n                    component={Input}\r\n                    validate={[required, emailError]} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <Field className=\"form-control\"\r\n                    name={'password'}\r\n                    placeholder={'Enter password'}\r\n                    component={Input}\r\n                    type={\"password\"} />\r\n            </div>\r\n            {props.error && <div className=\"form-group\">{props.error}</div>}\r\n\r\n            <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n            <p className=\"forgot-password text-right\">\r\n                Already registered\r\n                <NavLink to={\"/sign-in\"}>Sign in?</NavLink>\r\n            </p>\r\n        </form >\r\n    );\r\n}\r\nconst SignUpFormRedux = reduxForm({ form: 'signUp', required })(SignUpForm)\r\n\r\nconst SignUp = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData,)\r\n        props.signUp(formData.email, formData.password)\r\n    }\r\n    return <SignUpFormRedux onSubmit={onSubmit} />\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    uid: state.firebase.auth.uid,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { signUp })(SignUp)","import React from 'react';\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <>\r\n        <h1>Home</h1>\r\n        </>\r\n    )\r\n  }","import React from 'react';\r\n\r\nexport default function Shop(props) {\r\n    return (\r\n        <>\r\n        <h1>Shop</h1>\r\n        </>\r\n    )\r\n  }","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunk from 'redux-thunk';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n// import { firestoreReducer } from 'redux-firestore'\r\nimport { getFirebase } from \"react-redux-firebase\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nlet store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk, thunk.withExtraArgument({ getFirebase }))\r\n);\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport SignIn from \"./Components/SignIn/SignIn\";\nimport SignUp from \"./Components/SignUp/SignUp\";\nimport Home from './Pages/Home/Home';\nimport Shop from './Pages/Shop/Shop';\nimport store from './Redux/store';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  componentDidMount() {\n\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"outer\">\n          <div className=\"inner\">\n            <Switch>\n              <Route exact path='/' render={() => <Home />} />\n              <Route path='/home' render={() => <Home />} />\n              <Route path='/shop' render={() => <Shop />} />\n              <Route path=\"/sign-in\" render={() => <SignIn />} />\n              <Route path=\"/sign-up\" component={SignUp} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => ({\n\n  state: state.firebase.auth\n\n})\nexport default connect(mapStateToProps)(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyAtAB2pg0qUtIljiJwYBcNM4meMTZNaT-k\",\r\n  authDomain: \"myappreact-3f183.firebaseapp.com\",\r\n  databaseURL: \"https://myappreact-3f183-default-rtdb.firebaseio.com\",\r\n  projectId: \"myappreact-3f183\",\r\n  storageBucket: \"myappreact-3f183.appspot.com\",\r\n  messagingSenderId: \"172280822778\",\r\n  appId: \"1:172280822778:web:c0b880a37e3862e9834243\",\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './Redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebase, { firebaseConfig } from \"./firebaseConfig\";\n// import { createFirestoreInstance } from \"redux-firestore\";\n\n\n\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  dispatch: store.dispatch\n  // createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </ReactReduxFirebaseProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}